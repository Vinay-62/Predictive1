# -*- coding: utf-8 -*-
"""LVADSUSR131_vinay_lab1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18X3wgUSucDq8fskLzdmMcWsH3Ig06bu-
"""

import pandas as pd
import matplotlib.pyplot as plt
data=pd.read_csv("/content/expenses.csv")
df=pd.DataFrame(data)
df.head()

#null values
print(data.isna().sum())
data = data.dropna()
#there are no null values in dataset

#Outliers handling
plt.boxplot(data['charges'])
plt.show()
#removing outliers
threshold=47
df=df[df['bmi']<=47]
print(df)

#encoding
from sklearn.preprocessing import LabelEncoder
encoder=LabelEncoder()
df['sex']=encoder.fit_transform(df['sex'])
df['smoker']=encoder.fit_transform(df['smoker'])
df['region_encoder']=encoder.fit_transform(df['region'])
regions=df['region']
df=df.drop(['region'],axis=1)

# to remove duplicate rows
df.drop_duplicates()
# we have many duplicate rows, so it will remove rows from the dataframe

#train and test data splitting
X=df.drop(['charges'],axis=1)
y=df['charges']
from sklearn.model_selection import train_test_split
X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.2,random_state=42)

#Linear Regression model
from sklearn.linear_model import LinearRegression
linear=LinearRegression()
linear.fit(X_train,y_train)
prediction=linear.predict(X_test)
#print(prediction)

#metrics
from sklearn.metrics import mean_squared_error,r2_score,confusion_matrix
import math
mse=mean_squared_error(prediction,y_test)
print("Mean square error is",mse)
print()
rsme=math.sqrt(mse)
print("Root mean square error is",rsme)
print()
r_squared=r2_score(prediction,y_test)
print("R-squared is",r_squared)